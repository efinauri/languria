


// <p>If we list all the natural numbers below $10$ that are multiples of $3$ or $5$, we get $3, 5, 6$ and $9$. The sum of these multiples is $23$.</p>
// <p>Find the sum of all the multiples of $3$ or $5$ below $1000$.</p>

sum = 0
:[0..1000]
    @@ sum += [
        it % 3 == 0 or it % 5 == 0: it
        _: 0
    ] |>> true
$"PROBLEM 1: {sum}"




// <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
// $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
// <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

fib_a = 1
fib_b = 2
sum = 2
loop = || {
    tmp = fib_a
    fib_a = fib_b
    fib_b += tmp
    fib_b >= 4_000_000 and return "done"
    sum += fib_b @ |n| [n % 2 == 0: n, _: 0] |>> true
    _@ loop
}
_@ loop
$"PROBLEM 2: {sum}"




// <p>The prime factors of $13195$ are $5, 7, 13$ and $29$.</p>
// <p>What is the largest prime factor of the number $600851475143$?</p>

 generate_primes_smaller_than = |size| {
     prime_factors = :[2, 3]
     candidate_prime = 5
     loop = || {
         candidate_prime >= size and return prime_factors
         is_prime = true
         prime_factors @@ {
            candidate_prime % ti == 0 and (return is_prime = false)
            candidate_prime < ti^2 and (return is_prime = true)
            }
         is_prime and {
            i += 1
            prime_factors << |candidate_prime, candidate_prime|
         }
         (candidate_prime+1) % 1000 == 0 and {
            $candidate_prime
            $size
         }
         candidate_prime += 2
         _@ loop
     }
     _@ loop
 }

 list_prime_factors = |n| {
     candidate_factors = (1 + n ^ 0.5) @ generate_primes_smaller_than
     $true_factors = [0:0]
     candidate_factors @@ {
        n % ti == 0 and {
        true_factors << |ti, ti|
        }
     }
     return true_factors
 }

 //13195 @ list_prime_factors
 result = 600851475143 @ list_prime_factors
 $"PROBLEM 3: {result}"